openapi: 3.1.0
info:
  title: User and Product Management API
  description: An API for managing users and their associated products
  version: 1.0.0
servers:
  - url: https://your-api-url.herokuapp.com
    description: Production server
  
paths:
  /:
    get:
      summary: API Home
      description: Returns the API documentation homepage
      responses:
        '200':
          description: HTML or JSON response with API information
          content:
            text/html:
              schema:
                type: string
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  endpoints:
                    type: object

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users with pagination, filtering, and sorting
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
          description: Number of items per page
        - in: query
          name: sortBy
          schema:
            type: string
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
          description: Sort direction
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  page:
                    type: integer
                  limit:
                    type: integer
                  total:
                    type: integer
                  sortBy:
                    type: string

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /users/{id}/products:
    get:
      summary: Get products for a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user ID
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Create a product for a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - description
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        description:
          type: string
        userId:
          type: integer
        createdAt:
          type: string
          format: date-time
